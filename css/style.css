*,
*::after,
*::before {
   margin: 0;
   padding: 0;
   border: 0;
   box-sizing: border-box;
}

body {
   line-height: 1;
}

li {
   list-style: none;
}

a,
a:visited {
   text-decoration: none;
}

a:hover {
   text-decoration: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
   font-size: inherit;
   font-weight: inherit;
}

img {
   vertical-align: top;
}

.wrapper {
   width: 100%;
   min-height: 100vh;
   overflow: hidden;
}

/* animation: animation-duration || animation-timing-function || 
  animation-delay || animation-iteration-count || animation-direction || 
  animation-fill-mode || animation-play-state || [none | animation-name] */
/* ****************** header  ***************** */

.header__inner {
   position: relative;
   width: 100%;
   height: 50vh;
   background-color: #ced8e5;
   box-shadow: inset -10px -10px 25px 0 #d1e3fa;
   overflow: hidden;
   animation-name: inner;
   animation-duration: 8s;
   animation-timing-function: ease;
   animation-iteration-count: 1;
   /*infinite*/
   animation-direction: normal;
   animation-play-state: running;
   animation-delay: 0s;
   animation-fill-mode: both;
}

@keyframes inner {

   0% {
      background-color: #ced8e5;
   }

   90% {
      background-color: #ced8e5;
   }

   100% {
      background-color: rgba(0, 0, 0, .5);
   }
}

.header__sun {
   position: absolute;
   top: 0;
   right: 0;
   width: 100%;
   height: 100%;
}

.sun-header__box {
   position: relative;
   width: 100%;
   height: 100%;
}

.sun-header__circule {
   position: absolute;
   top: 20%;
   right: 20%;
   width: 100px;
   height: 100px;
   border-radius: 50%;
   padding: 20px;
   animation-name: circle;
   animation-duration: 8s;
   animation-timing-function: ease;
   animation-iteration-count: 1;
   /*infinite*/
   animation-direction: normal;
   animation-play-state: running;
   animation-delay: 0s;
   animation-fill-mode: both;
}

/* animation-name: circle; имя которому обращаемся
animation-duration: 1s; Отвечает за продолжительность анимации.
animation-timing-function: linear; Задаёт сценарий развития анимации между ключевыми кадрами. ease по умолчанию. ease по умолчанию, ease-in, ease-out, ease-in-out, linear, steps(int,start|end), cubic-bezier(x1,y1,x2,y2)
animation-iteration-count: 1; Отвечает за повтор проигрывания ключевых кадров. infinite бесконечно
animation-direction: normal;  Определяет направление и тип проигрывания ключевых кадров. normal по умолчанию, reverse, alternate, alternate-reverse
animation-play-state: running; Позволяет запускать или останавливать анимацию по событию. running по умолчанию, paused
animation-delay: 0s; Отвечает за задержку перед проигрыванием. 
animation-fill-mode: both;  Определяет какие значения анимируемых css свойств применятся к объекту после завершения анимации. none по умолчанию, forwards, backwards, both*/
@keyframes circle {

   0% {
      box-shadow: inset 0 0 0 0 #aeca0c;
      transform: translate(100%, 20%);
      background-color: #c3e30e;
   }

   90% {
      background-color: #c3e30e;
   }

   99% {
      box-shadow: inset 0 0 20px 0 #aeca0c;
      transform: translate(0, 100%);
      background-color: #000;
      
   }
   100% {
      transform: translate(0, 100%);
      background-color: transparent;
   }
}

.sun-header__circule::after {
   content: '';
   position: absolute;
   top: 0;
   right: 0;
   width: 500px;
   height: 500px;
   border-radius: 50%;
   transform: translate(40%, -40%);
   animation-name: circle-af;
   animation-duration: 5s;
   animation-timing-function: ease;
   animation-iteration-count: 1;
   animation-direction: normal;
   animation-play-state: running;
   animation-delay: 0ss;
   animation-fill-mode: forwards;
}

@keyframes circle-af {

   0% {
      border: 140px solid #c3e30e;
   }

   100% {
      border: 1px solid transparent;
   }
}
